"use strict";var et=Object.create;var k=Object.defineProperty;var rt=Object.getOwnPropertyDescriptor;var nt=Object.getOwnPropertyNames;var it=Object.getPrototypeOf,st=Object.prototype.hasOwnProperty;var at=(a,t)=>{for(var e in t)k(a,e,{get:t[e],enumerable:!0})},j=(a,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of nt(t))!st.call(a,i)&&i!==e&&k(a,i,{get:()=>t[i],enumerable:!(r=rt(t,i))||r.enumerable});return a};var L=(a,t,e)=>(e=a!=null?et(it(a)):{},j(t||!a||!a.__esModule?k(e,"default",{value:a,enumerable:!0}):e,a)),ot=a=>j(k({},"__esModule",{value:!0}),a);var Pt={};at(Pt,{BrandBuilder:()=>_,Config:()=>y,WarpActionExecutor:()=>Q,WarpArgSerializer:()=>U,WarpBuilder:()=>V,WarpConstants:()=>g,WarpContractLoader:()=>F,WarpIndex:()=>H,WarpLink:()=>R,WarpRegistry:()=>P,WarpUtils:()=>w,address:()=>It,biguint:()=>Ct,boolean:()=>At,codemeta:()=>xt,composite:()=>mt,esdt:()=>vt,getChainId:()=>W,getLatestProtocolIdentifier:()=>B,getWarpActionByIndex:()=>ct,hex:()=>Bt,list:()=>gt,nothing:()=>St,option:()=>lt,optional:()=>dt,shiftBigintBy:()=>x,string:()=>ht,toPreviewText:()=>q,toTypedRegistryInfo:()=>v,token:()=>bt,u16:()=>wt,u32:()=>Tt,u64:()=>Wt,u8:()=>yt,variadic:()=>ft});module.exports=ot(Pt);var A=require("@multiversx/sdk-core"),Z=L(require("ajv"));var y={ProtocolNameWarp:"warp",ProtocolNameBrand:"warp-brand",LatestProtocolVersion:"0.5.0",LatestWarpSchemaUrl:"https://raw.githubusercontent.com/vLeapGroup/warps-specs/refs/heads/main/schemas/v0.5.0.schema.json",LatestBrandSchemaUrl:"https://raw.githubusercontent.com/vLeapGroup/warps-specs/refs/heads/main/schemas/brand/v0.1.0.schema.json",DefaultClientUrl:a=>a==="devnet"?"https://devnet.usewarp.to":a==="testnet"?"https://testnet.usewarp.to":"https://usewarp.to",SuperClientUrls:["https://usewarp.to","https://testnet.usewarp.to","https://devnet.usewarp.to"],Chain:{ApiUrl:a=>a==="devnet"?"https://devnet-api.multiversx.com":a==="testnet"?"https://testnet-api.multiversx.com":"https://api.multiversx.com"},Registry:{Contract:a=>a==="devnet"?"erd1qqqqqqqqqqqqqpgqje2f99vr6r7sk54thg03c9suzcvwr4nfl3tsfkdl36":a==="testnet"?"####":"erd1qqqqqqqqqqqqqpgq3mrpj3u6q7tejv6d7eqhnyd27n9v5c5tl3ts08mffe"},AvailableActionInputSources:["field","query"],AvailableActionInputTypes:["string","uint8","uint16","uint32","uint64","biguint","boolean","address"],AvailableActionInputPositions:["value","arg:1","arg:2","arg:3","arg:4","arg:5","arg:6","arg:7","arg:8","arg:9","arg:10"]};var W=a=>a==="devnet"?"D":a==="testnet"?"T":"1",B=a=>`${a}:${y.LatestProtocolVersion}`,ct=(a,t)=>a?.actions[t-1],v=a=>({hash:a.hash.toString("hex"),alias:a.alias?.toString()||null,trust:a.trust.toString(),creator:a.creator.toString(),createdAt:a.created_at.toNumber(),brand:a.brand?.toString("hex")||null,upgrade:a.upgrade?.toString("hex")||null}),x=(a,t)=>{let e=a.toString(),[r,i=""]=e.split("."),s=Math.abs(t);if(t>0)return BigInt(r+i.padEnd(s,"0"));if(t<0){let o=r+i;if(s>=o.length)return 0n;let p=o.slice(0,-s)||"0";return BigInt(p)}else return BigInt(a)},q=(a,t=100)=>{if(!a)return"";let e=a.replace(/<\/?(h[1-6])[^>]*>/gi," - ").replace(/<\/?(p|div|ul|ol|li|br|hr)[^>]*>/gi," ").replace(/<[^>]+>/g,"").replace(/\s+/g," ").trim();return e=e.startsWith("- ")?e.slice(2):e,e=e.length>t?e.substring(0,e.lastIndexOf(" ",t))+"...":e,e};var J=require("@multiversx/sdk-core/out");var g={HttpProtocolPrefix:"http",IdentifierParamName:"warp",IdentifierParamSeparator:":",DefaultIdentifierType:"alias",ArgParamsSeparator:":",ArgCompositeSeparator:"|",Egld:{Identifier:"EGLD",DisplayName:"eGold",Decimals:18}};var z=L(require("qr-code-styling"));var C=require("@multiversx/sdk-core");var b={Warp:a=>`warp:${a}`,RegistryInfo:a=>`registry-info:${a}`,Brand:a=>`brand:${a}`},I=class{constructor(){this.cache=new Map}set(t,e,r){let i=Date.now()+r*1e3;this.cache.set(t,{value:e,expiresAt:i})}get(t){let e=this.cache.get(t);return e?Date.now()>e.expiresAt?(this.cache.delete(t),null):e.value:null}clear(){this.cache.clear()}};var M=L(require("ajv"));var S=class{constructor(t){this.config=t;this.config=t}async validate(t){this.ensureMaxOneValuePosition(t),await this.ensureValidSchema(t)}ensureMaxOneValuePosition(t){if(t.actions.filter(r=>"position"in r?r.position==="value":!1).length>1)throw new Error("WarpBuilder: only one value position action is allowed")}async ensureValidSchema(t){let e=this.config.warpSchemaUrl||y.LatestWarpSchemaUrl,i=await(await fetch(e)).json(),s=new M.default,o=s.compile(i);if(!o(t))throw new Error(`WarpBuilder: schema validation failed: ${s.errorsText(o.errors)}`)}};var V=class{constructor(t){this.cache=new I;this.pendingWarp={protocol:B(y.ProtocolNameWarp),name:"",title:"",description:null,preview:"",actions:[]};this.config=t}createInscriptionTransaction(t){if(!this.config.userAddress)throw new Error("WarpBuilder: user address not set");let e=new C.TransactionsFactoryConfig({chainID:W(this.config.env)}),r=new C.TransferTransactionsFactory({config:e}),i=JSON.stringify(t),s=r.createTransactionForTransfer({sender:C.Address.newFromBech32(this.config.userAddress),receiver:C.Address.newFromBech32(this.config.userAddress),nativeAmount:BigInt(0),data:Buffer.from(i).valueOf()});return s.gasLimit=s.gasLimit+BigInt(2e6),s}async createFromRaw(t,e=!0){let r=JSON.parse(t);return e&&await new S(this.config).validate(r),w.prepareVars(r,this.config)}async createFromTransaction(t,e=!1){let r=await this.createFromRaw(t.data.toString(),e);return r.meta={hash:t.hash,creator:t.sender.bech32(),createdAt:new Date(t.timestamp*1e3).toISOString()},r}async createFromTransactionHash(t,e){let r=b.Warp(t);if(e){let s=this.cache.get(r);if(s)return console.log(`WarpBuilder (createFromTransactionHash): Warp found in cache: ${t}`),s}let i=w.getConfiguredChainApi(this.config);try{let s=await i.getTransaction(t),o=await this.createFromTransaction(s);return e&&e.ttl&&o&&this.cache.set(r,o,e.ttl),o}catch(s){return console.error("WarpBuilder: Error creating from transaction hash",s),null}}setName(t){return this.pendingWarp.name=t,this}setTitle(t){return this.pendingWarp.title=t,this}setDescription(t){return this.pendingWarp.description=t,this}setPreview(t){return this.pendingWarp.preview=t,this}setActions(t){return this.pendingWarp.actions=t,this}addAction(t){return this.pendingWarp.actions.push(t),this}async build(){return this.ensure(this.pendingWarp.protocol,"protocol is required"),this.ensure(this.pendingWarp.name,"name is required"),this.ensure(this.pendingWarp.title,"title is required"),this.ensure(this.pendingWarp.actions.length>0,"actions are required"),await new S(this.config).validate(this.pendingWarp),this.pendingWarp}getDescriptionPreview(t,e=100){return q(t,e)}ensure(t,e){if(!t)throw new Error(`WarpBuilder: ${e}`)}};var d=require("@multiversx/sdk-core/out");var D={buildInfo:{rustc:{version:"1.80.0-nightly",commitHash:"791adf759cc065316f054961875052d5bc03e16c",commitDate:"2024-05-21",channel:"Nightly",short:"rustc 1.80.0-nightly (791adf759 2024-05-21)"},contractCrate:{name:"registry",version:"0.0.1"},framework:{name:"multiversx-sc",version:"0.51.1"}},name:"RegistryContract",constructor:{inputs:[{name:"unit_price",type:"BigUint"},{name:"vault",type:"Address"}],outputs:[]},upgradeConstructor:{inputs:[],outputs:[]},endpoints:[{name:"registerWarp",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"hash",type:"bytes"},{name:"alias_opt",type:"optional<bytes>",multi_arg:!0},{name:"brand_opt",type:"optional<bytes>",multi_arg:!0}],outputs:[],allow_multiple_var_args:!0},{name:"unregisterWarp",mutability:"mutable",inputs:[{name:"warp",type:"bytes"}],outputs:[]},{name:"upgradeWarp",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"alias",type:"bytes"},{name:"new_warp",type:"bytes"}],outputs:[]},{name:"setWarpAlias",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"hash",type:"bytes"},{name:"alias",type:"bytes"}],outputs:[]},{name:"publishWarp",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"hash",type:"bytes"}],outputs:[]},{name:"getUserWarps",mutability:"readonly",inputs:[{name:"address",type:"Address"}],outputs:[{type:"variadic<InfoView>",multi_result:!0}]},{name:"getInfoByAlias",mutability:"readonly",inputs:[{name:"alias",type:"bytes"}],outputs:[{type:"InfoView"}]},{name:"getInfoByHash",mutability:"readonly",inputs:[{name:"hash",type:"bytes"}],outputs:[{type:"InfoView"}]},{name:"setVault",onlyOwner:!0,mutability:"mutable",inputs:[{name:"vault",type:"Address"}],outputs:[]},{name:"setUnitPrice",onlyOwner:!0,mutability:"mutable",inputs:[{name:"amount",type:"BigUint"}],outputs:[]},{name:"getConfig",mutability:"readonly",inputs:[],outputs:[{type:"BigUint"}]},{name:"registerBrand",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"hash",type:"bytes"}],outputs:[]},{name:"brandWarp",mutability:"mutable",payableInTokens:["EGLD"],inputs:[{name:"warp",type:"bytes"},{name:"brand",type:"bytes"}],outputs:[]},{name:"getUserBrands",mutability:"readonly",inputs:[{name:"user",type:"Address"}],outputs:[{type:"variadic<bytes>",multi_result:!0}]}],events:[{identifier:"warpRegistered",inputs:[{name:"hash",type:"bytes",indexed:!0},{name:"alias",type:"bytes",indexed:!0}]},{identifier:"warpUnregistered",inputs:[{name:"hash",type:"bytes",indexed:!0}]},{identifier:"warpUpgraded",inputs:[{name:"alias",type:"bytes",indexed:!0},{name:"new_warp",type:"bytes",indexed:!0}]},{identifier:"warpPublished",inputs:[{name:"hash",type:"bytes",indexed:!0}]},{identifier:"aliasUpdated",inputs:[{name:"hash",type:"bytes",indexed:!0},{name:"alias",type:"bytes",indexed:!0}]}],esdtAttributes:[],hasCallback:!1,types:{InfoView:{type:"struct",fields:[{name:"hash",type:"bytes"},{name:"alias",type:"Option<bytes>"},{name:"trust",type:"bytes"},{name:"creator",type:"Address"},{name:"created_at",type:"u64"},{name:"brand",type:"Option<bytes>"},{name:"upgrade",type:"Option<bytes>"}]}}};var P=class{constructor(t){this.cache=new I;this.config=t,this.unitPrice=BigInt(0)}async init(){await this.loadRegistryConfigs()}createWarpRegisterTransaction(t,e){if(this.unitPrice===BigInt(0))throw new Error("WarpRegistry: config not loaded. forgot to call init()?");if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");let r=e?this.unitPrice*BigInt(2):this.unitPrice;return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"registerWarp",gasLimit:BigInt(1e7),nativeTransferAmount:r,arguments:e?[d.BytesValue.fromHex(t),d.BytesValue.fromUTF8(e)]:[d.BytesValue.fromHex(t)]})}createWarpUnregisterTransaction(t){if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"unregisterWarp",gasLimit:BigInt(1e7),arguments:[d.BytesValue.fromHex(t)]})}createWarpUpgradeTransaction(t,e){if(this.unitPrice===BigInt(0))throw new Error("WarpRegistry: config not loaded. forgot to call init()?");if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"upgradeWarp",gasLimit:BigInt(1e7),nativeTransferAmount:this.unitPrice,arguments:[d.BytesValue.fromUTF8(t),d.BytesValue.fromHex(e)]})}createWarpAliasSetTransaction(t,e){if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"setWarpAlias",gasLimit:BigInt(1e7),nativeTransferAmount:this.unitPrice,arguments:[d.BytesValue.fromHex(t),d.BytesValue.fromUTF8(e)]})}createBrandRegisterTransaction(t){if(this.unitPrice===BigInt(0))throw new Error("WarpRegistry: config not loaded. forgot to call init()?");if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"registerBrand",gasLimit:BigInt(1e7),nativeTransferAmount:this.unitPrice,arguments:[d.BytesValue.fromHex(t)]})}createWarpPublishTransaction(t){if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"publishWarp",gasLimit:BigInt(1e7),nativeTransferAmount:this.unitPrice,arguments:[d.BytesValue.fromHex(t)]})}createWarpBrandingTransaction(t,e){if(!this.config.userAddress)throw new Error("WarpRegistry: user address not set");return this.getFactory().createTransactionForExecute({sender:d.Address.newFromBech32(this.config.userAddress),contract:d.Address.newFromBech32(this.getRegistryContractAddress()),function:"brandWarp",gasLimit:BigInt(1e7),nativeTransferAmount:this.unitPrice,arguments:[d.BytesValue.fromHex(t),d.BytesValue.fromHex(e)]})}async getInfoByAlias(t,e){let r=b.RegistryInfo(t);if(e){let h=this.cache.get(r);if(h)return console.log(`WarpRegistry (getInfoByAlias): RegistryInfo found in cache: ${t}`),h}let i=this.getRegistryContractAddress(),s=this.getController(),o=s.createQuery({contract:i,function:"getInfoByAlias",arguments:[d.BytesValue.fromUTF8(t)]}),p=await s.runQuery(o),[u]=s.parseQueryResponse(p),l=u?v(u):null,f=l?.brand?await this.fetchBrand(l.brand):null;return e&&e.ttl&&this.cache.set(r,{registryInfo:l,brand:f},e.ttl),{registryInfo:l,brand:f}}async getInfoByHash(t,e){let r=b.RegistryInfo(t);if(e){let h=this.cache.get(r);if(h)return console.log(`WarpRegistry (getInfoByHash): RegistryInfo found in cache: ${t}`),h}let i=this.getRegistryContractAddress(),s=this.getController(),o=s.createQuery({contract:i,function:"getInfoByHash",arguments:[d.BytesValue.fromHex(t)]}),p=await s.runQuery(o),[u]=s.parseQueryResponse(p),l=u?v(u):null,f=l?.brand?await this.fetchBrand(l.brand):null;return e&&e.ttl&&this.cache.set(r,{registryInfo:l,brand:f},e.ttl),{registryInfo:l,brand:f}}async getUserWarpRegistryInfos(t){let e=t||this.config.userAddress;if(!e)throw new Error("WarpRegistry: user address not set");let r=this.getRegistryContractAddress(),i=this.getController(),s=i.createQuery({contract:r,function:"getUserWarps",arguments:[new d.AddressValue(new d.Address(e))]}),o=await i.runQuery(s),[p]=i.parseQueryResponse(o);return p.map(v)}async getUserBrands(t){let e=t||this.config.userAddress;if(!e)throw new Error("WarpRegistry: user address not set");let r=this.getRegistryContractAddress(),i=this.getController(),s=i.createQuery({contract:r,function:"getUserBrands",arguments:[new d.AddressValue(new d.Address(e))]}),o=await i.runQuery(s),[p]=i.parseQueryResponse(o),u=p.map(h=>h.toString("hex")),l={ttl:365*24*60*60};return(await Promise.all(u.map(h=>this.fetchBrand(h,l)))).filter(h=>h!==null)}async fetchBrand(t,e){let r=b.Brand(t);if(e){let s=this.cache.get(r);if(s)return console.log(`WarpRegistry (fetchBrand): Brand found in cache: ${t}`),s}let i=w.getConfiguredChainApi(this.config);try{let s=await i.getTransaction(t),o=JSON.parse(s.data.toString());return o.meta={hash:s.hash,creator:s.sender.bech32(),createdAt:new Date(s.timestamp*1e3).toISOString()},e&&e.ttl&&this.cache.set(r,o,e.ttl),o}catch(s){return console.error("WarpRegistry: Error fetching brand from transaction hash",s),null}}getRegistryContractAddress(){return this.config.registryContract||y.Registry.Contract(this.config.env)}async loadRegistryConfigs(){let t=this.getRegistryContractAddress(),e=this.getController(),r=e.createQuery({contract:t,function:"getConfig",arguments:[]}),i=await e.runQuery(r),[s]=e.parseQueryResponse(i),o=BigInt(s.toString());this.unitPrice=o}getFactory(){let t=new d.TransactionsFactoryConfig({chainID:W(this.config.env)}),e=d.AbiRegistry.create(D);return new d.SmartContractTransactionsFactory({config:t,abi:e})}getController(){let t=w.getConfiguredChainApi(this.config),e=new d.QueryRunnerAdapter({networkProvider:t}),r=d.AbiRegistry.create(D);return new d.SmartContractQueriesController({queryRunner:e,abi:r})}};var R=class{constructor(t){this.config=t;this.config=t}isValid(t){return t.startsWith(g.HttpProtocolPrefix)?!!this.extractIdentifierInfoFromUrl(t):!1}async detectFromHtml(t){if(!t.length)return{match:!1,results:[]};let i=[...t.matchAll(/https?:\/\/[^\s"'<>]+/gi)].map(l=>l[0]).filter(l=>this.isValid(l)).map(l=>this.detect(l)),o=(await Promise.all(i)).filter(l=>l.match),p=o.length>0,u=o.map(l=>({url:l.url,warp:l.warp}));return{match:p,results:u}}async detect(t){let e=t.startsWith(g.HttpProtocolPrefix)?this.extractIdentifierInfoFromUrl(t):w.getInfoFromPrefixedIdentifier(t);if(!e)return{match:!1,url:t,warp:null,registryInfo:null,brand:null};let{type:r,id:i}=e,s=new V(this.config),o=new P(this.config),p=null,u=null,l=null;if(r==="hash"){p=await s.createFromTransactionHash(i);try{let{registryInfo:f,brand:h}=await o.getInfoByHash(i);u=f,l=h}catch{}}else if(r==="alias"){let{registryInfo:f,brand:h}=await o.getInfoByAlias(i);u=f,l=h,f&&(p=await s.createFromTransactionHash(f.hash))}return p?{match:!0,url:t,warp:p,registryInfo:u,brand:l}:{match:!1,url:t,warp:null,registryInfo:null,brand:null}}build(t,e){let r=this.config.clientUrl||y.DefaultClientUrl(this.config.env),i=t===g.DefaultIdentifierType?encodeURIComponent(e):encodeURIComponent(t+g.IdentifierParamSeparator+e);return y.SuperClientUrls.includes(r)?`${r}/${i}`:`${r}?${g.IdentifierParamName}=${i}`}generateQrCode(t,e,r=512,i="white",s="black",o="#23F7DD"){let p=this.build(t,e);return new z.default({type:"svg",width:r,height:r,data:String(p),margin:16,qrOptions:{typeNumber:0,mode:"Byte",errorCorrectionLevel:"Q"},backgroundOptions:{color:i},dotsOptions:{type:"extra-rounded",color:s},cornersSquareOptions:{type:"extra-rounded",color:s},cornersDotOptions:{type:"square",color:s},imageOptions:{hideBackgroundDots:!0,imageSize:.4,margin:8},image:`data:image/svg+xml;utf8,<svg width="16" height="16" viewBox="0 0 100 100" fill="${encodeURIComponent(o)}" xmlns="http://www.w3.org/2000/svg"><path d="M54.8383 50.0242L95 28.8232L88.2456 16L51.4717 30.6974C50.5241 31.0764 49.4759 31.0764 48.5283 30.6974L11.7544 16L5 28.8232L45.1616 50.0242L5 71.2255L11.7544 84.0488L48.5283 69.351C49.4759 68.9724 50.5241 68.9724 51.4717 69.351L88.2456 84.0488L95 71.2255L54.8383 50.0242Z"/></svg>`})}extractIdentifierInfoFromUrl(t){let e=new URL(t),r=y.SuperClientUrls.includes(e.origin),i=e.searchParams.get(g.IdentifierParamName),s=r&&!i?e.pathname.split("/")[1]:i;if(!s)return null;let o=decodeURIComponent(s);return w.getInfoFromPrefixedIdentifier(o)}};var ut="https://",G="query",K="env",w=class a{static prepareVars(t,e){if(!t?.vars)return t;let r=JSON.stringify(t),i=(s,o)=>{r=r.replace(new RegExp(`{{${s.toUpperCase()}}}`,"g"),o.toString())};return Object.entries(t.vars).forEach(([s,o])=>{if(typeof o=="string"&&o.startsWith(`${G}:`)){if(!e.currentUrl)throw new Error("WarpUtils: currentUrl config is required to prepare vars");let p=o.split(`${G}:`)[1],u=new URL(e.currentUrl).searchParams.get(p);u&&i(s,u)}else if(typeof o=="string"&&o.startsWith(`${K}:`)){let p=o.split(`${K}:`)[1],u=e.vars?.[p];u&&i(s,u)}else i(s,o)}),JSON.parse(r)}static getInfoFromPrefixedIdentifier(t){let e=decodeURIComponent(t),r=e.includes(g.IdentifierParamSeparator)?e:`${g.DefaultIdentifierType}${g.IdentifierParamSeparator}${e}`,[i,s]=r.split(g.IdentifierParamSeparator);return{type:i,id:s}}static getNextStepUrl(t,e){if(!t?.next)return null;if(t.next.startsWith(ut))return t.next;{let r=new R(e),i=a.getInfoFromPrefixedIdentifier(t.next);return i?r.build(i.type,i.id):null}}static getConfiguredChainApi(t){let e=t.chainApiUrl||y.Chain.ApiUrl(t.env);if(!e)throw new Error("WarpUtils: Chain API URL not configured");return new J.ApiNetworkProvider(e,{timeout:3e4,clientName:"warp-sdk"})}};var _=class{constructor(t){this.pendingBrand={protocol:B(y.ProtocolNameBrand),name:"",description:"",logo:""};this.config=t}createInscriptionTransaction(t){if(!this.config.userAddress)throw new Error("BrandBuilder: user address not set");let e=new A.TransactionsFactoryConfig({chainID:W(this.config.env)}),r=new A.TransferTransactionsFactory({config:e}),i=JSON.stringify(t);return r.createTransactionForNativeTokenTransfer({sender:A.Address.newFromBech32(this.config.userAddress),receiver:A.Address.newFromBech32(this.config.userAddress),nativeAmount:BigInt(0),data:Buffer.from(i).valueOf()})}async createFromRaw(t,e=!0){let r=JSON.parse(t);return e&&await this.ensureValidSchema(r),r}async createFromTransaction(t,e=!1){return await this.createFromRaw(t.data.toString(),e)}async createFromTransactionHash(t){let e=w.getConfiguredChainApi(this.config);try{let r=await e.getTransaction(t);return this.createFromTransaction(r)}catch(r){return console.error("BrandBuilder: Error creating from transaction hash",r),null}}setName(t){return this.pendingBrand.name=t,this}setDescription(t){return this.pendingBrand.description=t,this}setLogo(t){return this.pendingBrand.logo=t,this}setUrls(t){return this.pendingBrand.urls=t,this}setColors(t){return this.pendingBrand.colors=t,this}setCta(t){return this.pendingBrand.cta=t,this}async build(){return this.ensure(this.pendingBrand.name,"name is required"),this.ensure(this.pendingBrand.description,"description is required"),this.ensure(this.pendingBrand.logo,"logo is required"),await this.ensureValidSchema(this.pendingBrand),this.pendingBrand}ensure(t,e){if(!t)throw new Error(`Warp: ${e}`)}async ensureValidSchema(t){let e=this.config.brandSchemaUrl||y.LatestBrandSchemaUrl,i=await(await fetch(e)).json(),s=new Z.default,o=s.compile(i);if(!o(t))throw new Error(`BrandBuilder: schema validation failed: ${s.errorsText(o.errors)}`)}};var c=require("@multiversx/sdk-core/out"),lt=(a,t)=>a?c.OptionValue.newProvided(a):t?c.OptionValue.newMissingTyped(t):c.OptionValue.newMissing(),dt=(a,t)=>a?new c.OptionalValue(a.getType(),a):t?new c.OptionalValue(t):c.OptionalValue.newMissing(),gt=a=>{if(a.length===0)throw new Error("Cannot create a list from an empty array");let t=a[0].getType();return new c.List(t,a)},ft=a=>c.VariadicValue.fromItems(...a),mt=a=>{let t=a.map(e=>e.getType());return new c.CompositeValue(new c.CompositeType(...t),a)},ht=a=>c.StringValue.fromUTF8(a),yt=a=>new c.U8Value(a),wt=a=>new c.U16Value(a),Tt=a=>new c.U32Value(a),Wt=a=>new c.U64Value(a),Ct=a=>new c.BigUIntValue(BigInt(a)),At=a=>new c.BooleanValue(a),It=a=>new c.AddressValue(c.Address.newFromBech32(a)),bt=a=>new c.TokenIdentifierValue(a),Bt=a=>c.BytesValue.fromHex(a),vt=a=>new c.Struct(new c.StructType("EsdtTokenPayment",[new c.FieldDefinition("token_identifier","",new c.TokenIdentifierType),new c.FieldDefinition("token_nonce","",new c.U64Type),new c.FieldDefinition("amount","",new c.BigUIntType)]),[new c.Field(new c.TokenIdentifierValue(a.token.identifier),"token_identifier"),new c.Field(new c.U64Value(BigInt(a.token.nonce)),"token_nonce"),new c.Field(new c.BigUIntValue(BigInt(a.amount)),"amount")]),xt=a=>new c.CodeMetadataValue(c.CodeMetadata.fromBuffer(Buffer.from(a,"hex"))),St=()=>new c.NothingValue;var m=require("@multiversx/sdk-core/out");var Vt=[{id:"EGLD",name:"eGold",decimals:18},{id:"EGLD-000000",name:"eGold",decimals:18}],X=a=>Vt.find(t=>t.id===a)||null;var n=require("@multiversx/sdk-core/out");var Y=new RegExp(`${g.ArgParamsSeparator}(.*)`),U=class{nativeToString(t,e){return t==="esdt"&&e instanceof n.TokenTransfer?`esdt:${e.token.identifier}|${e.token.nonce.toString()}|${e.amount.toString()}`:`${t}:${e?.toString()??""}`}typedToString(t){if(t.hasClassOrSuperclass(n.OptionValue.ClassName))return t.isSet()?`option:${this.typedToString(t.getTypedValue())}`:"option:null";if(t.hasClassOrSuperclass(n.OptionalValue.ClassName))return t.isSet()?`optional:${this.typedToString(t.getTypedValue())}`:"optional:null";if(t.hasClassOrSuperclass(n.List.ClassName)){let e=t.getItems(),i=e.map(o=>this.typedToString(o).split(g.ArgParamsSeparator)[0])[0],s=e.map(o=>this.typedToString(o).split(g.ArgParamsSeparator)[1]);return`list:${i}:${s.join(",")}`}if(t.hasClassOrSuperclass(n.VariadicValue.ClassName)){let e=t.getItems(),i=e.map(o=>this.typedToString(o).split(g.ArgParamsSeparator)[0])[0],s=e.map(o=>this.typedToString(o).split(g.ArgParamsSeparator)[1]);return`variadic:${i}:${s.join(",")}`}if(t.hasClassOrSuperclass(n.CompositeValue.ClassName)){let e=t.getItems(),r=e.map(p=>this.typedToString(p).split(g.ArgParamsSeparator)[0]),i=e.map(p=>this.typedToString(p).split(g.ArgParamsSeparator)[1]),s=r.join(g.ArgCompositeSeparator),o=i.join(g.ArgCompositeSeparator);return`composite(${s}):${o}`}if(t.hasClassOrSuperclass(n.BigUIntValue.ClassName)||t.getType().getName()==="BigUint")return`biguint:${BigInt(t.valueOf().toFixed())}`;if(t.hasClassOrSuperclass(n.U8Value.ClassName))return`uint8:${t.valueOf().toNumber()}`;if(t.hasClassOrSuperclass(n.U16Value.ClassName))return`uint16:${t.valueOf().toNumber()}`;if(t.hasClassOrSuperclass(n.U32Value.ClassName))return`uint32:${t.valueOf().toNumber()}`;if(t.hasClassOrSuperclass(n.U64Value.ClassName))return`uint64:${BigInt(t.valueOf().toFixed())}`;if(t.hasClassOrSuperclass(n.StringValue.ClassName))return`string:${t.valueOf()}`;if(t.hasClassOrSuperclass(n.BooleanValue.ClassName))return`bool:${t.valueOf()}`;if(t.hasClassOrSuperclass(n.AddressValue.ClassName))return`address:${t.valueOf().bech32()}`;if(t.hasClassOrSuperclass(n.TokenIdentifierValue.ClassName))return`token:${t.valueOf()}`;if(t.hasClassOrSuperclass(n.BytesValue.ClassName))return`hex:${t.valueOf().toString("hex")}`;if(t.hasClassOrSuperclass(n.CodeMetadataValue.ClassName))return`codemeta:${t.valueOf().toBuffer().toString("hex")}`;if(t.getType().getName()==="EsdtTokenPayment"){let e=t.getFieldValue("token_identifier").valueOf(),r=t.getFieldValue("token_nonce").valueOf(),i=t.getFieldValue("amount").valueOf();return`esdt:${e}|${r}|${i}`}throw new Error(`WarpArgSerializer (typedToString): Unsupported input type: ${t.getClassName()}`)}typedToNative(t){let e=this.typedToString(t);return this.stringToNative(e)}nativeToTyped(t,e){let r=this.nativeToString(t,e);return this.stringToTyped(r)}nativeToType(t){if(t.startsWith("composite")){let e=t.match(/\(([^)]+)\)/)?.[1];return new n.CompositeType(...e.split(g.ArgCompositeSeparator).map(r=>this.nativeToType(r)))}if(t==="string")return new n.StringType;if(t==="uint8")return new n.U8Type;if(t==="uint16")return new n.U16Type;if(t==="uint32")return new n.U32Type;if(t==="uint64")return new n.U64Type;if(t==="biguint")return new n.BigUIntType;if(t==="bool")return new n.BooleanType;if(t==="address")return new n.AddressType;if(t==="token")return new n.TokenIdentifierType;if(t==="hex")return new n.BytesType;if(t==="codemeta")return new n.CodeMetadataType;if(t==="esdt"||t==="nft")return new n.StructType("EsdtTokenPayment",[new n.FieldDefinition("token_identifier","",new n.TokenIdentifierType),new n.FieldDefinition("token_nonce","",new n.U64Type),new n.FieldDefinition("amount","",new n.BigUIntType)]);throw new Error(`WarpArgSerializer (nativeToType): Unsupported input type: ${t}`)}stringToNative(t){let e=t.split(g.ArgParamsSeparator),r=e[0],i=e.slice(1).join(g.ArgParamsSeparator);if(r==="null")return[r,null];if(r==="option"){let[s,o]=i.split(g.ArgParamsSeparator);return[`option:${s}`,o||null]}else if(r==="optional"){let[s,o]=i.split(g.ArgParamsSeparator);return[`optional:${s}`,o||null]}else if(r==="list"){let s=i.split(g.ArgParamsSeparator),o=s.slice(0,-1).join(g.ArgParamsSeparator),p=s[s.length-1],l=(p?p.split(","):[]).map(f=>this.stringToNative(`${o}:${f}`)[1]);return[`list:${o}`,l]}else if(r==="variadic"){let s=i.split(g.ArgParamsSeparator),o=s.slice(0,-1).join(g.ArgParamsSeparator),p=s[s.length-1],l=(p?p.split(","):[]).map(f=>this.stringToNative(`${o}:${f}`)[1]);return[`variadic:${o}`,l]}else if(r.startsWith("composite")){let s=r.match(/\(([^)]+)\)/)?.[1]?.split(g.ArgCompositeSeparator),p=i.split(g.ArgCompositeSeparator).map((u,l)=>this.stringToNative(`${s[l]}:${u}`)[1]);return[r,p]}else{if(r==="string")return[r,i];if(r==="uint8"||r==="uint16"||r==="uint32")return[r,Number(i)];if(r==="uint64"||r==="biguint")return[r,BigInt(i||0)];if(r==="bool")return[r,i==="true"];if(r==="address")return[r,i];if(r==="token")return[r,i];if(r==="hex")return[r,i];if(r==="codemeta")return[r,i];if(r==="esdt"){let[s,o,p]=i.split(g.ArgCompositeSeparator);return[r,new n.TokenTransfer({token:new n.Token({identifier:s,nonce:BigInt(o)}),amount:BigInt(p)})]}}throw new Error(`WarpArgSerializer (stringToNative): Unsupported input type: ${r}`)}stringToTyped(t){let[e,r]=t.split(/:(.*)/,2);if(e==="null"||e===null)return new n.NothingValue;if(e==="option"){let i=this.stringToTyped(r);return i instanceof n.NothingValue?n.OptionValue.newMissingTyped(i.getType()):n.OptionValue.newProvided(i)}if(e==="optional"){let i=this.stringToTyped(r);return i instanceof n.NothingValue?n.OptionalValue.newMissing():new n.OptionalValue(i.getType(),i)}if(e==="list"){let[i,s]=r.split(Y,2),p=s.split(",").map(u=>this.stringToTyped(`${i}:${u}`));return new n.List(this.nativeToType(i),p)}if(e==="variadic"){let[i,s]=r.split(Y,2),p=s.split(",").map(u=>this.stringToTyped(`${i}:${u}`));return new n.VariadicValue(new n.VariadicType(this.nativeToType(i)),p)}if(e.startsWith("composite")){let i=e.match(/\(([^)]+)\)/)?.[1],s=r.split(g.ArgCompositeSeparator),o=i.split(g.ArgCompositeSeparator),p=s.map((l,f)=>this.stringToTyped(`${o[f]}:${l}`)),u=p.map(l=>l.getType());return new n.CompositeValue(new n.CompositeType(...u),p)}if(e==="string")return r?n.StringValue.fromUTF8(r):new n.NothingValue;if(e==="uint8")return r?new n.U8Value(Number(r)):new n.NothingValue;if(e==="uint16")return r?new n.U16Value(Number(r)):new n.NothingValue;if(e==="uint32")return r?new n.U32Value(Number(r)):new n.NothingValue;if(e==="uint64")return r?new n.U64Value(BigInt(r)):new n.NothingValue;if(e==="biguint")return r?new n.BigUIntValue(BigInt(r)):new n.NothingValue;if(e==="bool")return r?new n.BooleanValue(typeof r=="boolean"?r:r==="true"):new n.NothingValue;if(e==="address")return r?new n.AddressValue(n.Address.newFromBech32(r)):new n.NothingValue;if(e==="token")return r?new n.TokenIdentifierValue(r):new n.NothingValue;if(e==="hex")return r?n.BytesValue.fromHex(r):new n.NothingValue;if(e==="codemeta")return new n.CodeMetadataValue(n.CodeMetadata.fromBuffer(Buffer.from(r,"hex")));if(e==="esdt"){let i=r.split(g.ArgCompositeSeparator);return new n.Struct(this.nativeToType("esdt"),[new n.Field(new n.TokenIdentifierValue(i[0]),"token_identifier"),new n.Field(new n.U64Value(BigInt(i[1])),"token_nonce"),new n.Field(new n.BigUIntValue(BigInt(i[2])),"amount")])}throw new Error(`WarpArgSerializer (stringToTyped): Unsupported input type: ${e}`)}typeToNative(t){if(t instanceof n.StringType)return"string";if(t instanceof n.U8Type)return"uint8";if(t instanceof n.U16Type)return"uint16";if(t instanceof n.U32Type)return"uint32";if(t instanceof n.U64Type)return"uint64";if(t instanceof n.BigUIntType)return"biguint";if(t instanceof n.BooleanType)return"bool";if(t instanceof n.AddressType)return"address";if(t instanceof n.TokenIdentifierType)return"token";if(t instanceof n.BytesType)return"hex";if(t instanceof n.CodeMetadataType)return"codemeta";if(t instanceof n.StructType&&t.getClassName()==="EsdtTokenPayment")return"esdt";throw new Error(`WarpArgSerializer (typeToNative): Unsupported input type: ${t.getClassName()}`)}};var F=class{constructor(t){this.config=t}async getContract(t){try{let r=await w.getConfiguredChainApi(this.config).doGetGeneric(`accounts/${t}/verification`);return{address:t,owner:r.ownerAddress,verified:r.isVerified}}catch(e){return console.error("WarpContractLoader: getContract error",e),null}}async getVerificationInfo(t){try{let r=await w.getConfiguredChainApi(this.config).doGetGeneric(`accounts/${t}/verification`);return{codeHash:r.codeHash,abi:r.source.abi}}catch(e){return console.error("WarpContractLoader: getVerificationInfo error",e),null}}};var Q=class{constructor(t){if(!t.currentUrl)throw new Error("WarpActionExecutor: currentUrl config not set");this.config=t,this.url=new URL(t.currentUrl),this.serializer=new U,this.contractLoader=new F(t)}async createTransactionForExecute(t,e){if(!this.config.userAddress)throw new Error("WarpActionExecutor: user address not set");let r=m.Address.newFromBech32(this.config.userAddress),i=new m.TransactionsFactoryConfig({chainID:W(this.config.env)}),{destination:s,args:o,value:p,transfers:u}=await this.getTxComponentsFromInputs(t,e,r),l=o.map(f=>this.serializer.stringToTyped(f));return s.isContractAddress()?new m.SmartContractTransactionsFactory({config:i}).createTransactionForExecute({sender:r,contract:s,function:"func"in t&&t.func||"",gasLimit:"gasLimit"in t?BigInt(t.gasLimit||0):0n,arguments:l,tokenTransfers:u,nativeTransferAmount:p}):new m.TransferTransactionsFactory({config:i}).createTransactionForTransfer({sender:r,receiver:s,nativeAmount:p,tokenTransfers:u,data:l[0]?.hasExactClass(m.StringValue.ClassName)?l[0].valueOf():void 0})}async executeQuery(t,e){if(!this.config.chainApiUrl)throw new Error("WarpActionExecutor: Chain API URL not set");if(!t.func)throw new Error("WarpActionExecutor: Function not found");let r=w.getConfiguredChainApi(this.config),i=new m.QueryRunnerAdapter({networkProvider:r}),s=await this.getAbiForAction(t),{args:o}=await this.getTxComponentsFromInputs(t,e),p=o.map(T=>this.serializer.stringToTyped(T)),u=new m.SmartContractQueriesController({queryRunner:i,abi:s}),l=u.createQuery({contract:t.address,function:t.func,arguments:p}),f=await u.runQuery(l),h=new m.ResultsParser,E={returnCode:f.returnCode,returnMessage:f.returnMessage,getReturnDataParts:()=>f.returnDataParts.map(T=>Buffer.from(T))},$=f.function,O=s.getEndpoint($),N=h.parseQueryResponse(E,O).firstValue;if(!N)throw new Error("WarpActionExecutor: Query result not found");return N}async executeCollect(t,e,r){let i=new Headers;i.set("Content-Type","application/json"),i.set("Accept","application/json"),Object.entries(t.destination.headers).forEach(([s,o])=>{i.set(s,o)}),await fetch(t.destination.url,{method:t.destination.method,headers:i,body:JSON.stringify({inputs:e,meta:r})})}async getTxComponentsFromInputs(t,e,r){let i=await this.getResolvedInputs(t,e),s=this.getModifiedInputs(i),o=s.find(T=>T.input.position==="receiver")?.value,p="address"in t?t.address:null,u=o?.split(":")[1]||p||r?.toBech32();if(!u)throw new Error("WarpActionExecutor: Destination/Receiver not provided");let l=m.Address.newFromBech32(u),f=this.getPreparedArgs(t,s),h=s.find(T=>T.input.position==="value")?.value||null,E="value"in t?t.value:null,$=BigInt(h?.split(":")[1]||E||0),O=s.filter(T=>T.input.position==="transfer"&&T.value).map(T=>T.value),N=[...("transfers"in t?t.transfers:[])?.map(this.toTypedTransfer)||[],...O?.map(T=>this.serializer.stringToNative(T)[1])||[]];return{destination:l,args:f,value:$,transfers:N}}getModifiedInputs(t){return t.map((e,r)=>{if(e.input.modifier?.startsWith("scale:")){let[,i]=e.input.modifier.split(":");if(isNaN(Number(i))){let s=Number(t.find(u=>u.input.name===i)?.value?.split(":")[1]);if(!s)throw new Error(`WarpActionExecutor: Exponent value not found for input ${i}`);let o=e.value?.split(":")[1];if(!o)throw new Error("WarpActionExecutor: Scalable value not found");let p=x(o,+s);return{...e,value:`${e.input.type}:${p}`}}else{let s=e.value?.split(":")[1];if(!s)throw new Error("WarpActionExecutor: Scalable value not found");let o=x(s,+i);return{...e,value:`${e.input.type}:${o}`}}}else return e})}async getResolvedInputs(t,e){let r=t.inputs||[],i=await Promise.all(e.map(o=>this.preprocessInput(o))),s=(o,p)=>o.source==="query"?this.serializer.nativeToString(o.type,this.url.searchParams.get(o.name)||""):i[p]||null;return r.map((o,p)=>({input:o,value:s(o,p)}))}async preprocessInput(t){try{let[e,r]=this.serializer.stringToNative(t);if(e==="esdt"){let[,,,i]=t.split(g.ArgCompositeSeparator);if(i)return t;let s=r;if(!new m.TokenComputer().isFungible(s.token))return t;let u=X(s.token.identifier)?.decimals;if(!u){let f=this.config.chainApiUrl||y.Chain.ApiUrl(this.config.env);u=(await(await fetch(`${f}/tokens/${s.token.identifier}`)).json()).decimals}if(!u)throw new Error(`WarpActionExecutor: Decimals not found for token ${s.token.identifier}`);let l=new m.TokenTransfer({token:s.token,amount:x(s.amount,u)});return this.serializer.nativeToString(e,l)+g.ArgCompositeSeparator+u}return t}catch{return t}}getPreparedArgs(t,e){let r="args"in t?t.args||[]:[];return e.forEach(({input:i,value:s})=>{if(!s||!i.position.startsWith("arg:"))return;let o=Number(i.position.split(":")[1])-1;r.splice(o,0,s)}),r}async getAbiForAction(t){if(t.abi)return await this.fetchAbi(t);let e=await this.contractLoader.getVerificationInfo(t.address);if(!e)throw new Error("WarpActionExecutor: Verification info not found");return m.AbiRegistry.create(e.abi)}async fetchAbi(t){if(!t.abi)throw new Error("WarpActionExecutor: ABI not found");let r=await(await fetch(t.abi)).json();return m.AbiRegistry.create(r)}toTypedTransfer(t){return new m.TokenTransfer({token:new m.Token({identifier:t.token,nonce:BigInt(t.nonce||0)}),amount:BigInt(t.amount||0)})}};var H=class{constructor(t){this.config=t}async search(t){if(!this.config.indexUrl)throw new Error("WarpIndex: Index URL is not set");try{let e=await fetch(this.config.indexUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.indexApiKey}`},body:JSON.stringify({[this.config.indexSearchParamName||"search"]:t})});if(!e.ok)throw new Error(`WarpIndex: search failed with status ${e.status}`);return(await e.json()).hits}catch(e){throw console.error("WarpIndex: Error searching for warps: ",e),e}}};0&&(module.exports={BrandBuilder,Config,WarpActionExecutor,WarpArgSerializer,WarpBuilder,WarpConstants,WarpContractLoader,WarpIndex,WarpLink,WarpRegistry,WarpUtils,address,biguint,boolean,codemeta,composite,esdt,getChainId,getLatestProtocolIdentifier,getWarpActionByIndex,hex,list,nothing,option,optional,shiftBigintBy,string,toPreviewText,toTypedRegistryInfo,token,u16,u32,u64,u8,variadic});
